cmake_minimum_required(VERSION 3.8)
project(rotatum_arm_hardware)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(hardware_interface REQUIRED)
find_package(pluginlib REQUIRED)
find_package(rclcpp_components REQUIRED)

add_library(rotatum_arm_hardware
        SHARED
        src/rotatum_arm_hardware_interface.cpp
)

target_include_directories(
        rotatum_arm_hardware
        PRIVATE
        include
)

ament_target_dependencies(
        rotatum_arm_hardware
        hardware_interface
        pluginlib
        rclcpp
        std_msgs
)

pluginlib_export_plugin_description_file(hardware_interface rotatum_arm_hardware.xml)


install(
        TARGETS rotatum_arm_hardware
        DESTINATION lib
)
install(
        DIRECTORY include/
        DESTINATION include
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_export_include_directories(
        include
)

ament_export_libraries(
        rotatum_arm_hardware
)
ament_export_dependencies(
        hardware_interface
        pluginlib
        rclcpp
)


ament_package()
